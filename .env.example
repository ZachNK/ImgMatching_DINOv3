# ==== 이미지/컨테이너 공통 ====
IMAGE_NAME=dinov3:cuda12.1-py310
TZ=Asia/Seoul # 표준 시간대 설정 (로그 분석 용이)
 
# ==== 호스트 경로 ====
# 프로젝트 코드 (run.py, visualize.py, imatch/ 포함)
PROJECT_HOST=<Your>\<Project>\<Directory>\dinov3_main\project

# dinov3 원본 (torch.hub 로딩용)
CODE_HOST=<Your>\<Project>\<Directory>\dinov3_src

# 가중치 루트 
WEIGHTS_HOST=<Your>\<Project>\<Directory>\dinov3_weights

# 이미지셋 루트
DATASET_HOST=<Your>\<Project>\<Directory>\dinov3_data

# 결과(Exports) 루트
EXPORT_HOST=<Your>\<Project>\<Directory>\dinov3_exports

# ==== 컨테이너 내부 경로 (고정) ====
REPO_DIR=/workspace/dinov3
IMG_ROOT=/opt/datasets
EMBED_ROOT=/exports/dinov3_embeds   # 임베딩 (npy) 기본 루트
MATCH_ROOT=/exports/dinov3_match    # 매칭 JSON 기본 루트
VIS_ROOT=/exports/dinov3_vis        # 시각화 PNG 기본 루트

# ==== 시각화 기본값 ====
VIS_MAX_LINES=1000                     # 그릴 선 최대 개수
VIS_LINEWIDTH=3                        # 선 두께
VIS_DRAW_POINTS=0                      # 1/0 또는 true/false
VIS_POINT_RADIUS=-1                    # -1: 자동, 0: 표시 안함
VIS_ALPHA=180                          # 선·점 투명도
VIS_RANSAC=homography                  # off/affine/homography
VIS_REPROJ_TH=8.0                      # 0~12
VIS_CONFIDENCE=0.9999                  # 0~1
VIS_ITERS=10000                        # 0~100000

# 네트워크 차단(torch.hub 원격 다운로드 방지)
DINOV3_BLOCK_NET=1 # 1: 차단, 0: 허용

# 네트워크 차단 해제 시 예시(CLI):
# docker compose exec -e DINOV3_BLOCK_NET=0 matching -w vitl16 -a 400.0100 -b 200.0100
