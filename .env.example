# ==== 이미지/컨테이너 공통 ====
IMAGE_NAME=dinov3:cuda12.1-py310
TZ=Asia/Seoul # 타임존 설정 (로그 분석 편의를 위해)
 
# ==== 호스트 경로 ====
# 프로젝트 코드 (run.py, visualize.py, imatch/ 포함 됨)
PROJECT_HOST=<Your>\<Project>\<Directory>dinov3_main\project

# dinov3 소스 (torch.hub 에서 import 할 리포지토리)
CODE_HOST=<Your>\<Project>\<Directory>\dinov3_src

# 가중치 루트 
WEIGHTS_HOST=<Your>\<Project>\<Directory>\dinov3_weights

# 데이터셋 루트
DATASET_HOST=<Your>\<Project>\<Directory>\dinov3_data

# 결과(Exports) 루트
EXPORT_HOST=<Your>\<Project>\<Directory>\dinov3_exports

# ==== 컨테이너 내부 경로 (고정) ====
REPO_DIR=/workspace/dinov3
IMG_ROOT=/opt/datasets
EXPORT_DIR=/exports/dinov3_embeds       # 메타에 기록용 (임베딩류 기본 루트)
VIS_DIR=/exports/pair_vis          # 시각화 출력 루트

# ==== 가중치 경로 (컨테이너 내부) ====
VIS_ROOT=/exports/pair_match          # run 아웃풋 JSON 기본 위치
VIS_OUT=/exports/pair_vis             # PNG 저장 루트
VIS_MAX_LINES=1000                     # 그릴 선 최대 개수
VIS_LINEWIDTH=3                        # 선 두께
VIS_DRAW_POINTS=0                      # 1/0 또는 true/false
VIS_POINT_RADIUS=-1                    # -1: 자동, 0: 표시 안함
VIS_ALPHA=180                          # 선·점 투명도
VIS_RANSAC=homography                  # off/affine/homography
VIS_REPROJ_TH=8.0                      # 0~12
VIS_CONFIDENCE=0.9999                  # 0~1
VIS_ITERS=10000                        # 0~100000

# 네트워크 차단(허브에서 인터넷로딩 방지; 오프라인 보장/재현성; 보안; torch.hub.load_state_dict_from_url를 막아서 실수로 온라인에서 가중치/리소스를 내려받지 못하게 함)
DINOV3_BLOCK_NET=1 # 1: 차단, 0: 허용

# 네트워크 차단 해제 일시 테스트 (CLI):
# docker compose exec -e DINOV3_BLOCK_NET=0 matching -w vitl16 -a 400.0100 -b 200.0100

