services:
  pair:
    build:
        context: .
        dockerfile: Dockerfile
    image: ${IMAGE_NAME}
    container_name: dinov3-pair
    gpus: all
    shm_size: "8g"
    working_dir: /workspace/project
    environment:
      TZ: ${TZ}
      # 내부 경로(코드에서 getenv로 읽음)
      REPO_DIR: ${REPO_DIR}
      IMG_ROOT: ${IMG_ROOT}
      EXPORT_DIR: ${EXPORT_DIR}
      PAIR_VIZ_DIR: ${PAIR_VIZ_DIR}
      DINOV3_BLOCK_NET: ${DINOV3_BLOCK_NET}
      IMATCH_VIZ_ROOT: ${IMATCH_VIZ_ROOT}
      IMATCH_VIZ_OUT: ${IMATCH_VIZ_OUT}
      IMATCH_VIZ_MAX_LINES: ${IMATCH_VIZ_MAX_LINES}
      IMATCH_VIZ_LINEWIDTH: ${IMATCH_VIZ_LINEWIDTH}
      IMATCH_VIZ_DRAW_POINTS: ${IMATCH_VIZ_DRAW_POINTS}
      IMATCH_VIZ_POINT_RADIUS: ${IMATCH_VIZ_POINT_RADIUS}
      IMATCH_VIZ_ALPHA: ${IMATCH_VIZ_ALPHA}
      IMATCH_VIZ_RANSAC: ${IMATCH_VIZ_RANSAC}
      IMATCH_VIZ_REPROJ_TH: ${IMATCH_VIZ_REPROJ_TH}
      IMATCH_VIZ_CONFIDENCE: ${IMATCH_VIZ_CONFIDENCE}
      IMATCH_VIZ_ITERS: ${IMATCH_VIZ_ITERS}
    volumes:
      # 프로젝트(이 답변 이후에 만들어질 run.py/visualize.py/imatch/ 포함)
      - ${PROJECT_HOST}:/workspace/project
      # dinov3 리포지토리 (torch.hub로 로컬 로딩)
      - ${CODE_HOST}:/workspace/dinov3
      # 가중치/데이터/출력
      - ${WEIGHTS_HOST}:/opt/weights:ro
      - ${DATASET_HOST}:/opt/datasets
      - ${EXPORT_HOST}:/exports
    command: bash -lc "sleep infinity"
    stdin_open: true
    tty: true
